<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.business.sys.dao.SysMenuDao">

    <select id="getAuthMenu" resultType="com.business.sys.dto.SysMenuDto" parameterType="com.business.sys.dto.SysMenuDto">
        SELECT
			uuid,
			menu_pid,
			menu_pids,
			is_leaf,
			code,
			menu_name,
			url,
			icon,
			level,
			sort,
			status,
			description,
			type,
			create_time,
			create_user_uuid,
			update_time,
			update_user_uuid
		FROM
			sys_menu
		WHERE
			uuid IN (
			SELECT DISTINCT
				menu_id
			FROM
				sys_role_menu
			WHERE
				role_id IN
				<foreach collection="roleIds" item="roleId" index="index" open="(" close=")" separator=",">
					#{roleId}
				</foreach>
				)
			<if test="type != null and type != ''">
				AND type != #{type}
			</if>
    </select>

	<select id="getAllMenu" resultType="com.business.sys.dto.SysMenuDto" parameterType="com.business.sys.entity.SysMenu">
		SELECT
			uuid,
			menu_pid,
			code,
			menu_name,
			url,
			icon,
			level,
			sort,
			description
		FROM
			sys_menu
		<where>
			<if test="type != null and type != ''">
				type != #{type}
			</if>
		</where>
	</select>

	<insert id="insertMenu" parameterType="com.business.sys.entity.SysMenu">
		INSERT INTO sys_menu (
			uuid,
			menu_pid,
			menu_pids,
			is_leaf,
			code,
			menu_name,
			url,
			icon,
			level,
			sort,
			status,
			description,
			type,
			create_time,
			create_user_uuid
		)
		VALUES
			(
				#{uuid},
				#{menuPid},
				#{menuPids},
				#{isLeaf},
				#{code},
				#{menuName},
				#{url},
				#{icon},
				#{level},
				#{sort},
				#{status},
				#{description},
				#{type},
				#{createTime},
				#{createUserUuid}
			)
	</insert>

	<update id="updateMenu" parameterType="com.business.sys.entity.SysMenu">
		UPDATE sys_menu
		SET menu_pid = #{menuPid},
			menu_pids = #{menuPids},
			is_leaf = #{isLeaf},
			code = #{code},
			menu_name = #{menuName},
			url = #{url},
			icon = #{icon},
			level = #{level},
			sort = #{sort},
			status = #{status},
			description = #{description},
			type = #{type},
			update_time = #{updateTime},
			update_user_uuid = #{updateUserUuid}
		WHERE
			uuid = #{uuid}
	</update>

	<select id="getMenuAndBindRole" resultType="com.business.sys.dto.SysMenuDto" parameterType="com.business.sys.dto.SysMenuDto">
		SELECT
			sm.uuid,
			sm.menu_pid,
			sm.menu_pids,
			sm.is_leaf,
			sm.code,
			sm.menu_name,
			sm.url,
			sm.icon,
			sm.level,
			sm.sort,
			sm.status,
			sm.description,
			sm.type,
			sm.create_time,
			sm.create_user_uuid,
			sm.update_time,
			sm.update_user_uuid,
			srm.uuid AS roleMenuId
		FROM
			sys_menu sm
		LEFT JOIN sys_role_menu srm ON srm.role_id = #{roleId} AND srm.menu_id = sm.uuid
	</select>

</mapper>
